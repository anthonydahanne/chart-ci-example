pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Docker@0
  displayName: 'Generate helm package'
  inputs:
    containerRegistryType: 'Container Registry'
    action: 'Run an image'
    imageName: 'alpine/helm:2.16.1'
    volumes: |
      $(build.sourcesDirectory):/chart-ci-example
    containerCommand: 'package --save=false .'
    workdir: '/chart-ci-example'
    detached: false    
- task: Docker@0
  displayName: 'Download existing index.yaml'
  inputs:
    containerRegistryType: 'Container Registry'
    action: 'Run an image'
    imageName: 'alpine:latest'
    volumes: |
      $(build.sourcesDirectory):/chart-ci-example
    containerCommand: 'wget -P /chart-ci-example/ https://anthonydahanne.github.io/chart-ci-example/index.yaml'
    detached: false   
- task: Docker@0
  displayName: 'Generate helm index.yaml'
  inputs:
    containerRegistryType: 'Container Registry'
    action: 'Run an image'
    imageName: 'alpine/helm:2.16.1'
    volumes: |
      $(build.sourcesDirectory):/chart-ci-example
    containerCommand: 'repo index --merge index.yaml .'
    workdir: '/chart-ci-example'
    detached: false    
- bash: |
    # setup Github Pages branch and repo to push to
    gh_url="https://$GT@github.com/anthonydahanne/chart-ci-example.git"
    gh_branch=gh-pages
    gh_source="#${SYSTEM_PULLREQUEST_PULLREQUESTNUMBER}"
    
    COMMIT=$(git rev-parse HEAD)
    
    # setup git username and email; auth was done in a previous task 
    git config --local user.name "autogen"
    git config --local user.email "autogen-noreply@no-reply.dahanne.net"

    # to see the commands
    set -o xtrace

    # only keep files that were generated previously : index.yaml and a .tgz archive
    cp $(build.sourcesDirectory)/index.yaml /tmp/
    cp $(build.sourcesDirectory)/*.tgz /tmp/
    
    git checkout -f gh-pages
    git pull $gh_url $gh_branch
    cp /tmp/index.yaml $(build.sourcesDirectory)/
    cp /tmp/*.tgz $(build.sourcesDirectory)/
    git add index.yaml *.tgz
    git status
    git commit -m "Update repository with latest helm chart from ${gh_source} ${COMMIT}" index.yaml *.tgz
    git push $gh_url $gh_branch
  displayName: 'Commit Helm Charts'
  condition: not(eq(variables['Build.Reason'], 'PullRequest'))
